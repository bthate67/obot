#!/usr/bin/env python3
# This file is placed in the Public Domain.

__version__ = 101

import os, sys ; sys.path.insert(0, "olib")

from bus import Bus
from hdl import Handler
from krn import Kernel
from obj import cfg
from trm import termreset, termsave

import doctest
import shutil
import unittest

flags = doctest.REPORT_NDIFF|doctest.FAIL_FAST|doctest.ELLIPSIS

class Test(Handler):

    def raw(self, txt):
        if Kernel.opts("v"):
            print(txt)

def wrap(func):
    termsave()
    try:
        func()
    except PermissionError as ex:
        cprint(str(ex))
    except KeyboardInterrupt:
        pass
    finally:
        termreset()

def main():
    if os.path.exists(".test"):
        shutil.rmtree(".test")
    cfg.debug = True
    cfg.wd = ".test"
    k = Kernel()
    k.parse()
    k.boot("test", __version__)
    k.scan("obj")
    Bus.add(k)
    pat = "test_%s*" % "*"
    suite = unittest.loader.TestLoader().discover("test", pattern=pat)
    unittest.TextTestRunner(verbosity=3).run(suite)
    doctest.testfile("../test/test1.txt", optionflags=flags, report=False, verbose=False)

wrap(main)
